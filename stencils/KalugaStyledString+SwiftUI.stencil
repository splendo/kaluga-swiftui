{% if argument.includeResources %}
import SwiftUI
import class {{ argument.sharedFrameworkName }}.StyledString
import class {{ argument.sharedFrameworkName }}.TextStyleKt

// MARK: - StyledString

extension StyledString {
    func toAttributedString() -> AttributedString {
            var attributedString = AttributedString(attributeString)

            let ranges: [Range<AttributedString.Index>] = attributedString.runs.compactMap { run in
                if run.attributes.link != nil {
                    run.range
                } else {
                    nil
                }
            }
            ranges.forEach { range in
                var container = AttributeContainer()
                if let linkStyle = linkStyle {
                    container = container.foregroundColor(linkStyle.color.swiftUI)
                    if linkStyle.isUnderlined {
                        container = container.underlineStyle(.single)
                    }
                }

                attributedString[range].mergeAttributes(container)
            }
            return attributedString
    }
}
{% endif %}
