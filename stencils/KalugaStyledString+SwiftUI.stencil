{% if argument.includeResources %}
import SwiftUI
import {{ argument.sharedFrameworkName }}

// MARK: - StyledString

extension KalugaLabel.Styled {
    func toAttributedText() -> some View {
        AttributedText(self)
    }
}

// MARK: - AttributedText

fileprivate struct AttributedText: UIViewRepresentable {
    private let styledLabel: KalugaLabel.Styled
    init(_ styledLabel: KalugaLabel.Styled) {
        self.styledLabel = styledLabel
    }
    func makeUIView(context: Context) -> UILabel {
        let label = UILabel()
        label.lineBreakMode = .byClipping
        label.numberOfLines = 0
        label.setContentCompressionResistancePriority(.defaultLow, for: .horizontal)
        label.setContentCompressionResistancePriority(.defaultLow, for: .vertical)
        return label
    }
    func updateUIView(_ uiView: UILabel, context: Context) {
        TextStyleKt.bindLabel(uiView, label: styledLabel)
    }
}
{% endif %}
