{% if argument.includeResources %}
import SwiftUI
import {{ argument.sharedFrameworkName }}

struct NavigationBarColor: ViewModifier {

    init(
        backgroundColor: {{ argument.sharedFrameworkName }}.KalugaColor,
        tintColor: {{ argument.sharedFrameworkName }}.KalugaColor,
        shadowColor: {{ argument.sharedFrameworkName }}.KalugaColor,
        font: UIFont,
        largeFont: UIFont
    ) {
        let coloredAppearance = UINavigationBarAppearance()
        coloredAppearance.configureWithOpaqueBackground()
        coloredAppearance.backgroundColor = backgroundColor.uiColor
        coloredAppearance.shadowColor = shadowColor.uiColor
        coloredAppearance.titleTextAttributes = [
            .foregroundColor: tintColor.uiColor,
            .font: font
        ]
        coloredAppearance.largeTitleTextAttributes = [
            .foregroundColor: tintColor.uiColor,
            .font: largeFont
        ]

        UINavigationBar.appearance().standardAppearance = coloredAppearance
        UINavigationBar.appearance().scrollEdgeAppearance = coloredAppearance
        UINavigationBar.appearance().compactAppearance = coloredAppearance
        UINavigationBar.appearance().tintColor = tintColor.uiColor
    }

    func body(content: Content) -> some View {
        content
    }
}

extension View {
    func navigationBarColor(
        backgroundColor: {{ argument.sharedFrameworkName }}.KalugaColor,
        tintColor: {{ argument.sharedFrameworkName }}.KalugaColor,
        shadowColor: {{ argument.sharedFrameworkName }}.KalugaColor,
        font: UIFont = .systemFont(ofSize: 17, weight: .semibold),
        largeFont: UIFont = .boldSystemFont(ofSize: 34)
    ) -> some View {
        self.modifier(
            NavigationBarColor(
                backgroundColor: backgroundColor,
                tintColor: tintColor,
                shadowColor: shadowColor,
                font: font,
                largeFont: largeFont
            )
        )
    }
}
{% endif %}