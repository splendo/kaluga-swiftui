{% if argument.includeResources %}
import SwiftUI
import {{ argument.sharedFrameworkName }}

// MARK: - KalugaLabel

extension KalugaLabel {
    @ViewBuilder
    func toText() -> some View {
        switch self {
        case let label as KalugaLabel.Plain:
            makePlainLabel(label: label)
        case let label as KalugaLabel.Styled:
            makeStyledLabel(label: label)
        default:
            preconditionFailure("Unknown kaluga button type!")
        }
    }
}

extension View {
    public func textStyle(_ textStyle: KalugaTextStyle) -> some View {
        ModifiedContent(
            content: self,
            modifier: TextStyleModifier(textStyle: textStyle)
        )
    }
}

extension KalugaTextAlignment {
    var textAlignment: TextAlignment {
        switch self {
        case KalugaTextAlignment.left:
            return UIApplication.shared.userInterfaceLayoutDirection == .leftToRight ? .leading : .trailing
        case KalugaTextAlignment.right:
            return UIApplication.shared.userInterfaceLayoutDirection == .leftToRight ? .trailing : .leading
        case KalugaTextAlignment.end: return .trailing
        case KalugaTextAlignment.start:
            return .leading
        case KalugaTextAlignment.center:
            return .center
        default:
            preconditionFailure("Unknown text alignment type!")
        }
    }
}

// MARK: - Private methods

private extension KalugaLabel {
    @ViewBuilder
    private func makePlainLabel(label: KalugaLabel.Plain) -> some View {
        // assemble the button
        Text(label.text)
                .textStyle(style)
    }
    
    @ViewBuilder
    private func makeStyledLabel(label: KalugaLabel.Styled) -> some View {
        Text(label.text.toAttributedString())
                .textStyle(style)
    }
}

private struct TextStyleModifier: ViewModifier {
    let textStyle: KalugaTextStyle

    func body(content: Content) -> some View {
        content
            .font(Font(textStyle.font.withSize(CGFloat(textStyle.size))))
            .foregroundColor(textStyle.color.swiftUI)
            .multilineTextAlignment(textStyle.alignment.textAlignment)
    }
}
{% endif %}
